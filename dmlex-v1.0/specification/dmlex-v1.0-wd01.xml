<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "docbook/docbookx.dtd" >
<article status="Working Draft 01" lang="en-US">
  <articleinfo>
    <title>Data Model for Lexicography (DMLex), Version 1.0</title>
    <releaseinfo role="cvs">$Id: spectools-docbook-template-wd03.xml,v 1.4 2010/07/08 12:28:15 admin
      Exp$</releaseinfo>
    <releaseinfo role="track">Standards Track Work Product</releaseinfo>
    <productname class="trade">dmlex-v1.0</productname>
    <productnumber>wd01</productnumber>
    <releaseinfo role="OASIS-specification-this-authoritative">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.html</releaseinfo>
    <releaseinfo role="OASIS-specification-this">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-this">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.xml</releaseinfo>
    <releaseinfo role="OASIS-specification-previous-authoritative">http://docs.oasis-open.org/lexidma/dmlex/v1.0/N/A/dmlex-v1.0-N/A.html</releaseinfo>
    <releaseinfo role="OASIS-specification-previous">http://docs.oasis-open.org/lexidma/dmlex/v1.0/N/A/dmlex-v1.0-N/A.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-previous">http://docs.oasis-open.org/lexidma/dmlex/v1.0/N/A/dmlex-v1.0-N/A.xml</releaseinfo>
    <releaseinfo role="OASIS-specification-latest-authoritative">http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.html</releaseinfo>
    <releaseinfo role="OASIS-specification-latest">http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.pdf</releaseinfo>
    <releaseinfo role="OASIS-specification-latest">http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.xml</releaseinfo>
    <releaseinfo role="committee"><ulink url="http://www.oasis-open.org/committees/lexidma/">OASIS Lexicographic Infrastructure Data Model and API (LEXIDMA) TC</ulink></releaseinfo>
    <authorgroup>
      <othercredit role="chair">
        <firstname>Toma≈æ</firstname>
        <surname>Erjavec</surname>
        <affiliation>
          <orgname><ulink url="http://www.ijs.si/">Jozef Stefan Institute</ulink></orgname>
          <address format="linespecific"><email>tomaz.erjavec@ijs.si</email></address>
        </affiliation>
        <email>tomaz.erjavec@ijs.si</email>
      </othercredit>
      <editor>
        <firstname>David</firstname>
        <surname>Filip</surname>
        <affiliation>
          <orgname><ulink url="http://www.adaptcentre.ie/">Trinity College Dublin
            (ADAPT)</ulink></orgname>
          <address format="linespecific"><email>david.filip@adaptcentre.ie</email></address>
        </affiliation>
        <email>david.filip@adaptcentre.ie</email>
      </editor>
      <editor>
        <firstname>Simon</firstname>
        <surname>Krek</surname>
        <affiliation>
          <orgname><ulink url="http://www.ijs.si/">Jozef Stefan Institute</ulink></orgname>
          <address format="linespecific"><email>simon.krek@ijs.si</email></address>
        </affiliation>
        <email>simon.krek@ijs.si</email>
      </editor>
    </authorgroup>
    <pubdate>12 March 2022</pubdate>
    <copyright>
      <year>2022</year>
      <holder>OASIS Open, Inc. All Rights Reserved.</holder>
    </copyright>
    <legalnotice role="additional">
      <title>Additional artifacts</title>
      <!--  probably will have references to UML diagrams
      <para>This prose specification is one component of a Work Product that also includes:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para> Declarative validation artifacts accessible from <ulink url="&this-loc;/schemas/"
              >&this-loc;/schemas/</ulink>
          </para>



        </listitem>
      </itemizedlist> -->
      <para>NONE AT THE MOMENT</para>
    </legalnotice>
    <legalnotice role="related">
      <title>Related Work</title>
      <!--  Model content for replaced specifications in the future
   <para>This specification replaces or supersedes:</para>

      <itemizedlist spacing="compact">
        <listitem>
          <para><emphasis>XLIFF Version &pversion;.</emphasis> Edited by Tom Comerford, David Filip, Rodolfo M. Raya, and Yves Savourel.
            05 August 2014. OASIS Standard. <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.0/os/xliff-core-v2.0-os.html">http://docs.oasis-open.org/xliff/xliff-core/v&pversion;/os/xliff-core-v&pversion;-os.html</ulink></para>
        </listitem>
      </itemizedlist>
       -->
      <para>This specification is related to:</para>
      <itemizedlist spacing="compact">
        <!--  model content for related specifications in case there are any later on
        <listitem>
          <para><emphasis>JLIFF Version &version;</emphasis>. Edited by Robert van Engelen and David
            Filip. &pubdate;. OASIS &standard;. <ulink url="&this-loc;/&name;-&stage;.html"
              >&this-loc;/&name;-&stage;.html</ulink>. Latest version: <ulink
              url="&latest-loc;/&name;.html">&latest-loc;/&name;.html</ulink>. </para>
        </listitem>

        <listitem>
          <para><emphasis>XLIFF Version 2.1.</emphasis> Edited by David Filip, Tom Comerford,
            Soroush Saadatfar, Felix Sasaki, and Yves Savourel. 13 February 2018. OASIS Standard.
              <ulink
              url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html"
              >http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html</ulink></para>
        </listitem>
         -->
        <listitem>
          <para><emphasis>No related specifications.</emphasis></para>
        </listitem>
      </itemizedlist>
    </legalnotice>
    <legalnotice id="namespaces" role="namespaces">
      <title>Declared namespaces</title>
      <para> This specification declares one or more namespaces. Namespace isn't considered an XML
        specific feature in this serialization independent specification.</para>
      <itemizedlist spacing="compact">
        <title>The core namespace</title>
        <listitem>
          <para><ulink url="http://docs.oasis-open.org/lexidma/ns/dmlex-1.0">http://docs.oasis-open.org/lexidma/ns/dmlex-1.0</ulink></para>
        </listitem>
      </itemizedlist>
      <itemizedlist>
        <title>Module namespaces:</title>
        <listitem>
          <para>TBD</para>
        </listitem>
        <listitem>
          <para>TBD</para>
        </listitem>
      </itemizedlist>
    </legalnotice>
    <abstract>
      <para>This document defines the 1st version of a data model in support of the high priority
        technical goals described in the LEXIDMA TC's charter, including:</para>
      <para>
        <itemizedlist>
          <listitem>
            <para>Serialization independent Data Model for Lexicography (DMLex)</para>
          </listitem>
          <listitem>
            <para>XML serialization of DMLex</para>
          </listitem>
          <listitem>
            <para>JSON serialization of DMLex</para>
          </listitem>
          <listitem>
            <para>RDF serialization of DMLex</para>
          </listitem>
          <listitem>
            <para>Informative Ontolex-Lemon mapping</para>
          </listitem>
          <listitem>
            <para>Informative TEI Lex-0 mapping</para>
          </listitem>
        </itemizedlist>
      </para>
    </abstract>
    <legalnotice role="status">
      <title>Status</title>
      <!--       <para>{Describe the status and stability of the specification
      here.}</para> -->
      <para>This document was last revised or approved by the LEXIDMA TC on the above date. The
        level of approval is also listed above. Check the "Latest version" location noted above for
        possible later revisions of this document. Any other numbered Versions and other technical
        work produced by the Technical Committee (TC) are listed at <ulink url="https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=lexidma#technical">https://www.oasis-open.org/committees/tc_home.php?wg_abbrev=lexidma#technical</ulink>.</para>
      <para>TC members should send comments on this document to the TC's email list. Others should
        send comments to the TC's public comment list, after subscribing to it by following the
        instructions at the "<ulink url="https://www.oasis-open.org/committees/comments/index.php?wg_abbrev=lexidma">Send A
          Comment</ulink>" button on the TC's web page at <ulink url="https://www.oasis-open.org/committees/lexidma/">https://www.oasis-open.org/committees/lexidma/</ulink>.</para>
      <para>This specification is provided under the <ulink url="https://www.oasis-open.org/policies-guidelines/ipr#Non-Assertion-Mode">Non-Assertion</ulink> Mode of the <ulink url="https://www.oasis-open.org/policies-guidelines/ipr">OASIS IPR Policy</ulink>, the
        mode chosen when the Technical Committee was established. For information on whether any
        patents have been disclosed that may be essential to implementing this specification, and
        any offers of patent licensing terms, please refer to the Intellectual Property Rights
        section of the TC's web page (<ulink url="https://www.oasis-open.org/committees/lexidma/ipr.php">https://www.oasis-open.org/committees/lexidma/ipr.php</ulink>).</para>
      <para>Note that any machine-readable content (<ulink url="https://www.oasis-open.org/policies-guidelines/tc-process#wpComponentsCompLang">Computer Language Definitions</ulink>) declared Normative for this Work Product is
        provided in separate plain text files. In the event of a discrepancy between any such plain
        text file and display content in the Work Product's prose narrative document(s), the content
        in the separate plain text file prevails.</para>
      <!-- 
      <para>The non-normative errata page for this specification is located at <ulink
          url="http://www.oasis-open.org/committees/lexidma/"
          >http://www.oasis-open.org/committees/lexidma/</ulink>.</para>
       -->
    </legalnotice>
    <legalnotice role="keywords">
      <title>Key words</title>
      <para>The key words <glossterm>must</glossterm>, <glossterm>must not</glossterm>,
          <glossterm>required</glossterm>, <glossterm>shall</glossterm>, <glossterm>shall
          not</glossterm>, <glossterm>should</glossterm>, <glossterm>should not</glossterm>,
          <glossterm>recommended</glossterm>, <glossterm>may</glossterm>, and
          <glossterm>optional</glossterm> in this document are to be interpreted as described in
          <ulink url="https://tools.ietf.org/html/bcp14">BCP 14</ulink> [<link linkend="rfc2119">RFC2119</link>] and [<link linkend="rfc8174">RFC8174</link>] if, and only if, they appear
        in all capitals, as shown here.</para>
    </legalnotice>
    <legalnotice role="citation">
      <title>Citation format</title>
      <para>When referencing this specification the following citation format should be used:</para>
      <para><citation>DMLex-1.0</citation></para>
      <para><emphasis>Data Model for Lexicography Version 1.0</emphasis>. Edited by David
        Filip and Simon Krek. 12 March 2022. OASIS Working Draft 01. <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.html">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/dmlex-v1.0-wd01.html</ulink>. Latest
        version: <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.html">http://docs.oasis-open.org/lexidma/dmlex/v1.0/dmlex-v1.0.html</ulink>. </para>
      <!-- 
      <para>The non-normative errata page for this specification is located at <ulink
          url="http://www.oasis-open.org/committees/xliff/"
          >http://www.oasis-open.org/committees/xliff/</ulink>.</para>
       -->
    </legalnotice>
    <legalnotice role="notices">
      <title>Notices</title>
      <para>Copyright ¬© OASIS<!-- ¬Æ --> Open 2022. All Rights Reserved.</para>
      <para>All capitalized terms in the following text have the meanings assigned to them in the
        OASIS Intellectual Property Rights Policy (the "OASIS IPR Policy"). The full <ulink url="https://www.oasis-open.org/policies-guidelines/ipr">Policy</ulink> may be found at
        the OASIS website.</para>
      <para>This document and translations of it may be copied and furnished to others, and
        derivative works that comment on or otherwise explain it or assist in its implementation may
        be prepared, copied, published, and distributed, in whole or in part, without restriction of
        any kind, provided that the above copyright notice and this section are included on all such
        copies and derivative works. However, this document itself may not be modified in any way,
        including by removing the copyright notice or references to OASIS, except as needed for the
        purpose of developing any document or deliverable produced by an OASIS Technical Committee
        (in which case the rules applicable to copyrights, as set forth in the OASIS IPR Policy,
        must be followed) or as required to translate it into languages other than English.</para>
      <para>The limited permissions granted above are perpetual and will not be revoked by OASIS or
        its successors or assigns.</para>
      <para>This document and the information contained herein is provided on an "AS IS" basis and
        OASIS DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY
        WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR
        ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.</para>
      <para>OASIS requests that any OASIS Party or any other party that believes it has patent
        claims that would necessarily be infringed by implementations of this OASIS Committee
        Specification or OASIS Standard, to notify OASIS TC Administrator and provide an indication
        of its willingness to grant patent licenses to such patent claims in a manner consistent
        with the IPR Mode of the OASIS Technical Committee that produced this specification.</para>
      <para>OASIS invites any party to contact the OASIS TC Administrator if it is aware of a claim
        of ownership of any patent claims that would necessarily be infringed by implementations of
        this specification by a patent holder that is not willing to provide a license to such
        patent claims in a manner consistent with the IPR Mode of the OASIS Technical Committee that
        produced this specification. OASIS may include such claims on its website, but disclaims any
        obligation to do so.</para>
      <para>OASIS takes no position regarding the validity or scope of any intellectual property or
        other rights that might be claimed to pertain to the implementation or use of the technology
        described in this document or the extent to which any license under such rights might or
        might not be available; neither does it represent that it has made any effort to identify
        any such rights. Information on OASIS' procedures with respect to rights in any document or
        deliverable produced by an OASIS Technical Committee can be found on the OASIS website.
        Copies of claims of rights made available for publication and any assurances of licenses to
        be made available, or the result of an attempt made to obtain a general license or
        permission for the use of such proprietary rights by implementers or users of this OASIS
        Committee Specification or OASIS Standard, can be obtained from the OASIS TC Administrator.
        OASIS makes no representation that any information or list of intellectual property rights
        will at any time be complete, or that any claims in such list are, in fact, Essential
        Claims.</para>
      <para>The name "OASIS" is a trademark of <ulink url="http://www.oasis-open.org">OASIS</ulink>,
        the owner and developer of this specification, and should be used only to refer to the
        organization and its official outputs. OASIS welcomes reference to, and implementation and
        use of, specifications, while reserving the right to enforce its marks against misleading
        uses. Please see <ulink url="https://www.oasis-open.org/policies-guidelines/trademark">https://www.oasis-open.org/policies-guidelines/trademark</ulink> for above
        guidance.</para>
    </legalnotice>
  </articleinfo>
  <section id="Introduction">
    <title>Introduction</title>
    <para>Data Model for Lexicography (DMLex) is a <emphasis>serialization independent Object
        Model</emphasis> designed by a group of lexicographers, lexicographic software providers,
      and researchers. It is intended to provide a simple, modular, and easy to adopt data model for
      use by all lexicographic industry actors across companies and academia as well as geographic
      locations. Adoption of this data model will facilitate exchange of lexicographic and
      linguistic corpus data globally and enable effective interchange with adjacent industries such
      as language services, terminology management, and technical writing. Semantic interoperability
      of lexicographic data will help lexicographers to surpass linguistically and geographically
      demarcated approaches and create a truly global market for lexicographic data across and among
      languages and locales. </para>
    <para><emphasis>All text is normative unless otherwise labeled.</emphasis> The following common
      methods are used for labeling portions of this specification as informative and hence
      non-normative: <simplelist type="vert">
        <member> Appendices and sections marked as "(Informative)" or "Non-Normative" in
          title,</member>
        <member> Notes (sections with the "Note" title),</member>
        <member> Warnings (sections with the "Warning" title),</member>
        <member> Examples (mainly example code listings, tree diagrams, but also any inline examples
          or illustrative exemplary lists in otherwise normative text),</member>
        <member> Schema and other validation artifacts listings (the corresponding artifacts are
          normative, not their listings).</member>
      </simplelist>
    </para>
    <section id="terminology">
      <title>Glossary</title>
      <section id="definitions">
        <title>Definitions</title>
        <variablelist>
          <varlistentry>
            <term>Agent</term>
            <listitem>
              <para>any application or tool that generates (creates), reads, edits, writes,
                processes, stores, renders or otherwise handles documents, messages, or any other
                instantiations of the <firstterm>DMLex</firstterm>.</para>
              <para><firstterm>Agent</firstterm> is the most general application conformance target
                that subsumes all other specialized user agents disregarding whether they are
                defined in this specification or not.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Enrich</term>
            <term>Enriching</term>
            <listitem>
              <para> the process of associating metadata and resources with
                  <firstterm>DMLex</firstterm> based lexicographic data. </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Enricher</term>
            <term>Enricher Agent</term>
            <listitem>
              <para>any <firstterm>Agent</firstterm> that performs the
                  <firstterm>Enriching</firstterm> process. </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Modify</term>
            <term>Modification</term>
            <listitem>
              <para> the process of changing core and module <firstterm>DMLex</firstterm> based
                structural and inline objects that were previously created by other
                  <firstterm>Writers</firstterm>
              </para>
              <itemizedlist>
                <title>Processing Requirements</title>
                <listitem>
                  <para> LIOM objects <glossterm>may</glossterm> be <firstterm>Modified</firstterm>
                    and <firstterm>Enriched</firstterm> at the same time. </para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>Modifier</term>
            <term>Modifier Agent</term>
            <listitem>
              <para>an <firstterm>Agent</firstterm> that performs the
                  <firstterm>Modification</firstterm> process. </para>
            </listitem>
          </varlistentry>
          <!--  The Reader defintion was not really needed, since such an Agent (that ONLY reads) practically does not exist and the PR for Redaers are well covered by the use of Agent
          <varlistentry>
            <term>Reader</term>
            <term>Reader Agent</term>

            <listitem>
              <para>an <firstterm>Agent</firstterm> that only renders <firstterm>XLIFF Documents</firstterm> provided by other <firstterm>Writers</firstterm>.

              </para>

              <note><para> Since XLIFF is intended as an exchange format rather than a processing format, many
              applications will need to generate <firstterm>XLIFF Documents</firstterm> from
              their internal processing formats, even in cases when they are processing
              <firstterm>XLIFF Documents</firstterm> created by another
              <firstterm>Extractor</firstterm>. </para></note>

             </listitem>

          </varlistentry>
           -->
          <varlistentry>
            <term>Writer</term>
            <term>Writer Agent</term>
            <listitem>
              <para>an <firstterm>Agent</firstterm> that creates, generates, or otherwise writes a
                  <firstterm>DMLex</firstterm> based document for whatever purpose, including but
                not limited to <firstterm>Creator</firstterm>, <firstterm>Modifier</firstterm>, and
                  <firstterm>Enricher</firstterm>
                <firstterm>Agents</firstterm>. </para>
              <note>
                <para><firstterm>DMLex</firstterm> intends to define lossless interchange between
                  and among different pipelines that can be based on arbitrary
                    <firstterm>DMLex</firstterm> conformant specifications (public) or even private
                  informally <firstterm>DMLex</firstterm> based formats (that could evolve into
                    <firstterm>DMLex</firstterm> conformant public specifications over time).
                  Details of interchange using a given serialization are to be found in this
                  specifications normative and informative appendices on various serializations and
                  mappings.</para>
              </note>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section id="keyconcepts">
        <title>Key concepts</title>
        <variablelist>
          <varlistentry>
            <term>DMLex Core</term>
            <listitem>
              <para>The core of <firstterm>DMLex</firstterm> 1.0 consists of the minimum set
                of data objects required to (a) create a <firstterm>DMLex</firstterm> Instance that
                contains interoperable lexicographic data
                ...<?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[ELABORATE]<?oxy_custom_end ?></para>
              <para>The namespace that corresponds to the core subset of
                  <firstterm>DMLex</firstterm> is <code><ulink url="http://docs.oasis-open.org/lexidma/ns/dmlex-1.0">http://docs.oasis-open.org/lexidma/ns/dmlex-1.0</ulink></code>.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>DMLex-defined (elements and attributes)</term>
            <listitem>
              <para>The following is the list of allowed schema URI prefixes for
                  <firstterm>DMLex-defined</firstterm> elements and attributes:</para>
              <simplelist type="vert">
                <member><ulink url="http://docs.oasis-open.org/lexidma/ns/"/></member>
              </simplelist>
              <para>Elements and attributes from other namespaces are not
                  <firstterm>DMLex-defined</firstterm>.</para>
              <para> </para>
              <para> </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>DMLex Conformant Specification</term>
            <listitem>
              <para>A publicly available specification that normatively defines a serialization
                (document, fragment or message payload format) that conforms to the DMLex defined in
                this specification.</para>
              <para>Currently known conformant serializations and mappings are defined in appendices
                to this standard: [olinks to appendices, including their normative status] </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>DMLex Instance</term>
            <listitem>
              <para>A document, fragment or message payload that is a valid instance of any
                  <firstterm>DMLex Conformant Specification</firstterm>. <note>
                  <para>Documents, fragments or message payloads cannot conform directly to DMLex,
                    as DMLex itself doesn't define serializations and an <emphasis>ad hoc</emphasis>
                    format cannot be reliably checked against the complex requirements of the DMLex.
                    Currently known LIOM instances include: [Could define and register media tyoes
                    based on some of the appendices].</para>
                </note>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>DMLex Module</term>
            <listitem>
              <para>A module is an <glossterm>optional</glossterm> set of data and metadata
                categories that were designed to store information about a process applied to a
                  <firstterm>DMLex Instance</firstterm> and the data incorporated into a
                  <firstterm>DMLex Instance</firstterm> as result of that process.</para>
              <para>Each official module defined for DMLex Version 1.0 has its data categories
                and structure defined within this specification and corresponds to at least one
                dedicated namespace, see <link linkend="namespaces">Normatively Used
                  Namespaces</link>.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
    </section>
  </section>
  <!-- Conformance section should go last, but it seems to make better sense here  -->
  <section id="Conformance">
    <title>Conformance</title>
   
   <orderedlist inheritnum="ignore" continuation="restarts">
       <listitem id="DocumentConformance">
           <orderedlist inheritnum="ignore" continuation="restarts">
               <title> DMLex Instances Conformance</title>
               <listitem>
    <para>Conformant <firstterm>DMLex Instances</firstterm>
                        <glossterm>must</glossterm> be well formed and valid instances according to
                        one of DMLex Serialization Specifications.</para>
               </listitem>
               <listitem>
    
                   <para>Another Instance conformance clause.</para>
               </listitem>
               <listitem>
    
    <para> ...</para>
               </listitem>
               <listitem>
                <para><firstterm>DMLex Instances</firstterm>
                        <glossterm>may</glossterm> contain custom extensions, as defined in the
                            <link linkend="extensions">Extension Mechanisms</link> section. Extensions
                            <glossterm>must</glossterm> be serialized in a way conformant with the
                        pertaining DMLex Serialization Specifications. </para>
               </listitem> 
           </orderedlist>
       </listitem>
       <listitem id="ApplicationConformance">
               <orderedlist inheritnum="ignore" continuation="restarts">
                   <title>
                       Application Conformance</title>
                <listitem>                
    <para>DMLex <firstterm>Writers</firstterm>
                        <glossterm>must</glossterm> create conformant <firstterm>DMLex
                            Instances</firstterm> to be considered DMLex compliant.</para>
                </listitem>
                <listitem>
                           <para>
                        <firstterm>Agents</firstterm> processing conformant <firstterm>DMLex
                            Instances</firstterm> that contain custom extensions are not
                            <glossterm>required</glossterm> to understand and process non-DMLex
                        objects or attributes. However, conformant applications
                            <glossterm>should</glossterm> preserve existing custom extensions when
                        processing conformant <firstterm>DMLex Instances</firstterm>, provided that
                        the objects that contain custom extensions are not removed according to
                        DMLex Processing Requirements or the extension's own processing
                        requirements.</para>
                </listitem>
                    <listitem>
                        <para>All <firstterm>Agents</firstterm>
                        <glossterm>must</glossterm> comply with Processing Requirements for
                        otherwise unspecified <firstterm>Agents</firstterm> or without a
                        specifically set target <firstterm>Agent</firstterm>.</para> 
                    </listitem>
                                      
                   <listitem>
                       <para> Specialized <firstterm>Agents</firstterm> defined in this
                        specification - this is <firstterm>Writer</firstterm>,
                            <firstterm>Modifier</firstterm>, and <firstterm>Enricher</firstterm>
                        <firstterm>Agents</firstterm> - <glossterm>must</glossterm> comply with the
                        Processing Requirements targeting their specifically defined type of
                            <firstterm>Agent</firstterm> on top of Processing Requirements targeting
                        all <firstterm>Agents</firstterm> as per point c. above.</para>
                   </listitem>
                   <listitem>
                    <para>DMLex is an object model explicitly designed for exchanging data among
                        various <firstterm>Agents</firstterm>. Thus, a conformant DMLex application
                            <glossterm>must</glossterm> be able to accept <firstterm>DMLex
                            Instances</firstterm>
                        <firstterm>Created</firstterm>,  <firstterm>Modified</firstterm>, or
                            <firstterm>Enriched</firstterm> by a different application, provided
                        that:</para>
                        <orderedlist inheritnum="ignore" continuation="restarts">
                        <listitem>
                            <para>The processed files are conformant <firstterm>DMLex
                                    Instances</firstterm> according to the same DMLex Serialization
                                Specification,</para>
                        </listitem>
                            <listitem>
                                <para>in a state compliant with all relevant Processing Requirements.</para>
                            </listitem>  
                        </orderedlist>
                            
                </listitem>
            
                   
   </orderedlist>
       </listitem>
       <listitem>
                       <orderedlist inheritnum="ignore" continuation="restarts">
                           <title>
                               Backwards Compatibility</title>
                           <listitem>
                    <para> N/A. </para>
                </listitem>
                       </orderedlist>
                   </listitem>
   </orderedlist>
    
    <note><para><firstterm>DMLex Instances</firstterm> cannot be conformant to this specification w/o being
            conformant to a specific serialization. </para></note>
</section>
  <!-- 
  Need to decide if fragid mechanism will be defined or reused and on what level
  <xi:include href="fragments/fragments.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
   -->

  <!--  core and modules  -->
  <section>
  <title>The Core Specification</title>
  <para>
    The DMLex Core is for monolingual lexical resources, where headwords, definitions, examples etc. are all in one and the same language.
  </para>
  <section>
    <title>Data types</title>
    <section>
  <title><literal moreinfo="none">LexicographicResource</literal></title>
  <para>
    A data set which can be viewed and used by humans as a dictionary
    and - simultaneously - ingested, processed and understood by
    software agents as a machine-readable database.
  </para>
  <warning>
    <para>
      The correct name of this data type in DMLex is  
      <emphasis>lexicographic</emphasis> resource, not
      <emphasis>lexical</emphasis>.
    </para>
  </warning>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">language</literal> (optional, IETF language code)
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            The language of headwords, definitions, examples.
          </para>
        </listitem>
      </itemizedlist>
      <note>
        <para>
          DMLex is based on the assumption that all headwords in a single lexicographic resource
          are in the same language, and that definitions and examples, if any occur in the resource, 
          are in that language too. The <literal moreinfo="none">language</literal> property informs potential users
          of the resource which language that is.
        </para>
      </note>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">transcriptionScheme</literal> (optional, IETF language code, eg. <literal moreinfo="none">en-fonipa</literal> for
        English IPA) </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            The scheme (e.g. IPA) in which the
            <literal moreinfo="none">transcription</literal> property of
            <literal moreinfo="none">Pronunciation</literal> objects is given.
          </para>
        </listitem>
      </itemizedlist>
      <note>
        <para>
          DMLex is based on the assumption that, if you do use any pronunciation transcriptions in your (monolingual)
          lexicographic resource, they all follow the same scheme. The <literal moreinfo="none">transcriptionScheme</literal>
          tells potential users of the lexicographic resource which scheme that is.
        </para>
      </note>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">metadataLanguage</literal> (IETF language code) </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> The language of the display captions of metadata items. </para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Entry</literal> (one or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">PartOfSpeechValue</literal> (zero or more) </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">LabelValue</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">InflectedFormCaption</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
  <example>
    <title>Example of a lexicographic resource</title>
    <programlisting format="linespecific">LexicographicResource: language="en"
    Entry: headword="aardvark"
        Sense: ...
        Sense: ...
    Entry: headword="abacus"
        Sense: ...
        Sense: ...
    Entry: headword="abandon"
        Sense: ...
        Sense: ...</programlisting>    
  </example>
</section>
    <section>
  <title><literal moreinfo="none">Entry</literal></title>
  <para>
    A part of a lexicographic resource which contains information related
    to exactly one headword.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">LexicographicResource</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">headword</literal> (non-empty string)
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            The headword can be a single word, a multi-word expression, or
            any expression in the source language which is being described
            by the entry in the lexicographic resource.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">homographNumber</literal> (number, optional)
      </para>
    </listitem>
  </itemizedlist>
  <note>
    <para>Entries do not have an explicit listing order. An application can imply a listing
      order from a combination of the headword and the homograph number.</para>  
  </note>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">PartOfSpeech</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">Label</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">Pronunciation</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">InflectedForm</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">Sense</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
  <example>
    <title>Example of a lexicographic entry</title>
    <programlisting format="linespecific">Entry: headword="bank", homographNumber=1
    PartOfSpeech: ...
    Pronunciation: ...
    Sense: ...
    Sense: ...</programlisting>
  </example>
</section>
    <section>
  <title><literal moreinfo="none">Sense</literal></title>
  <para>
    A part of an entry which groups together information relating to one
    of the (possibly multiple) meanings (or meaning potentials) of the
    entry's headword.
  </para>
  <note>
    <para>
      An <emphasis role="strong">entry</emphasis> is a container for formal properties of the headword such as orthography,
      morphology, syntax and pronunciation.
      A <emphasis role="strong">sense</emphasis> is a container for statements about the headword's semantics.
    </para>    
  </note>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Entry</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Can be implicit from the serialization.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">indicator</literal> (optional, non-empty string)
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            A short statement that indicates the meaning of a sense and
            permits its differentiation from other senses in the entry.
          </para>
        </listitem>
      </itemizedlist>
      <note>
        <para>
          Indicators are sometimes used in dictionaries as "mini-definitions" instead of
          or in addition to regular definitions. They are short, one-word or two-word paraphrases
          of the sense. Their purpose is to allow the (human) user to find the desired sense quickly. 
        </para>
      </note>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">definition</literal> (optional, non-empty string)
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> A long statement that describes and/or explains the meaning of a sense.</para>
        </listitem>
      </itemizedlist>
      <note>
        <para>
          In DMLex, the term <emphasis>definition</emphasis> encompasses not only
          formal sciency definitions, but also less formal explanations.
        </para>
      </note>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Label</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">Example</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
  <example>
    <title>Example of an entry with two senses, each having both an indicator and a definition</title>
    <programlisting format="linespecific">Entry: headword="bank"
    Sense: indicator="financial institution", definition = "an institution which..."
        Example: ...
    Sense: indicator="riverside", definition = "an earthen mound which..."
        Example: ...</programlisting>
  </example>
</section>
    <section>
  <title><literal moreinfo="none">PartOfSpeech</literal></title>
  <para>
    Any of the word classes to which a lexical item may be assigned,
    e.g. noun, verb, adjective, etc.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Entry</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string) </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>Must be one of the values defined by instances of
              <literal moreinfo="none">PartOfSpeechValue</literal>.</para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <note>
    <para> If you want to model other grammatical properties of the headword besides part of speech,
      such as gender (of nouns) or aspect (of verbs), the recommended way to do that in DMLex is to
      conflate them to the part-of-speech label, for example "masculine noun" and "feminine noun",
      or "perfective verb" and "imperfective verb". </para>
  </note>
  <example>
    <title>Example of a part of speech</title>
    <programlisting format="linespecific">LexicographicResource
  PartOfSpeechValue: value="n", displayValue="noun"
  Entry: headword="aardvark"
    PartOfSpeech: value="n"</programlisting>
  </example>
</section>
    <section>
  <title><literal moreinfo="none">Label</literal></title>
  <para> An indication of some restriction on the use of the lexical item such time (old-fashioned,
    neologism), region (dialect), register (formal, colloquial), domain (medicine, politics) or
    grammar (singular-only).</para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Entry</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">Sense</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">Pronunciation</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">InflectedForm</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string) </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>Must be one of the values defined by instances of
            <literal moreinfo="none">LabelValue</literal>.</para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <example>
    <title>Example of a label</title>
    <programlisting format="linespecific">LexicographicResource
  LabelValue: value="sl", displayValue="slang"
  Entry: headword="bitch"
    Sense: definition="a female dog"
    Sense: definition="a woman who is difficult to get along with"
      Label: value="sl"</programlisting>
  </example>
</section>
    <section>
  <title><literal moreinfo="none">Pronunciation</literal></title>
  <para>
    Information about the pronunciation of its parent.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Entry</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">InflectedForm</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para> Properties: </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>At least one of:</para>
      <itemizedlist>
        <listitem>
          <para>
            <literal moreinfo="none">transcription</literal> (non-empty string)
          </para>
          <note>
            <para>
              The scheme of the transcription (e.g. IPA) can be communicated to
              users of the lexicographic resource through the <literal moreinfo="none">transcriptionScheme</literal>
              property of the <literal moreinfo="none">LexicographicResource</literal> object.
            </para>
          </note>
        </listitem>
        <listitem>
          <para>
            <literal moreinfo="none">recording</literal> (string: name or URL of a sound file) </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Label</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
  <example>
    <title>Example of pronunciation given as transcription</title>
    <programlisting format="linespecific">Entry: headword="aardvark"
    Pronunciation: transcription="a:rdva:rk"</programlisting>
  </example>
  <example>
    <title>Example of pronunciation given as a sound file</title>
    <programlisting format="linespecific">Entry: headword="aardvark"
    Pronunciation: recording="aardvark.mp3"</programlisting>
  </example>
  <example>
    <title>Example of pronunciation given both ways</title>
    <programlisting format="linespecific">Entry: headword="aardvark"
    Pronunciation: transcription="a:rdva:rk", recording="aardvark.mp3"</programlisting>
  </example>
</section>
    <section>
  <title><literal moreinfo="none">InflectedForm</literal></title>
  <para>
    An inflected headword is a form of the inflectional paradigm of its
    parent.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Entry</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">caption</literal> (non-empty string) e.g. 'plural'
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>Must be one of the values defined by instances of <literal moreinfo="none">InlectedFormCaption</literal>.</para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Usage</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">Pronunciation</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
  <example>
    <title>Example of an entry with two inflected forms</title>
    <programlisting format="linespecific">LexicographicResource: language="ga", displayLanguage="en"
    PartOfSpeechCaption: value="nf", displayValue="feminine noun"
    InflectedFormCaption: value="gs", displayValue="genitive singular"
    InflectedFormCaption: value="pl", displayValue="plural"
    Entry headword="deirfi√∫r"
        PartOfSpeech: value="nf"
        InflectedForm: caption="gs", value="deirf√©ar"
        InflectedForm: caption="pl", value="deirfi√∫racha"</programlisting>
  </example>
</section>
    <section>
  <title><literal moreinfo="none">Example</literal></title>
  <para> A sentence or other text extract which illustrates the headword being used in the sense. </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Sense</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">text</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">sourceIdentity</literal> (optional)
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Must be one of the values defined by instances of <literal moreinfo="none">ExampleSource</literal>.</para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">sourceDescription</literal> (optional, non-emty text)
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> A free-form statement about the source of the example.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  
  <example>
    <title>A simple example</title>
    <programlisting format="linespecific">LexicographicResource: language="en" displayLanguage="en"

  Entry: headword="pack"
    Sense:
      Example: text="I need to pack my bags."</programlisting>
  </example>

  <example>
    <title>A sourced example</title>
    <programlisting format="linespecific">LexicographicResource: language="en" displayLanguage="en"
  ExampleSource value="wodehouse1967" displayValue="P.G. Wodehose (1967) The World of Jeeves. London: Arrow Books"
  
  Entry: headword="pack"
    Sense:
      Example: text="Have you started packing yet, Jeeves?" sourceIdentity="wodehouse1967"</programlisting>
  </example>
  
  <example>
    <title>A sourced example with additional details about where in the source it comes from</title>
    <programlisting format="linespecific">LexicographicResource: language="en" displayLanguage="en"
  ExampleSource value="wodehouse1967" displayValue="P.G. Wodehose (1967) The World of Jeeves. London: Arrow Books"
  
  Entry: headword="pack"
    Sense:
      Example: text="Have you started packing yet, Jeeves?" sourceIdentity="wodehouse1967" sourceDescription="p. 314 line 20"</programlisting>
  </example>

  <example>
    <title>An example with ad-hoc attribution</title>
    <programlisting format="linespecific">LexicographicResource: language="en" displayLanguage="en"
  
  Entry: headword="pack"
    Sense:
      Example: text="Pack up your knives and go!" sourceDescription="overheard in Dublin corner of Grafton St. and Stephen's Green"</programlisting>
  </example>

</section>
  </section>
  <section>
    <title>Metadata types</title>
    <section>
  <title><literal moreinfo="none">InflectedFormCaption</literal></title>
  <para> An <literal moreinfo="none">InflectedFormCaption</literal> represents one of several allowed values for the
      <literal moreinfo="none">caption</literal> property of <literal moreinfo="none">InflectedForm</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
  
  <example>
    <title>Example: restricting the captions of inflected forms</title>
    <programlisting format="linespecific">LexicographicResource: language="ga", displayLanguage="en"
    PartOfSpeechCaption: value="nf", displayValue="feminine noun"
    InflectedFormCaption: value="gs", displayValue="genitive singular"
    InflectedFormCaption: value="pl", displayValue="plural"
    Entry headword="deirfi√∫r"
        PartOfSpeech: value="nf"
        InflectedForm: caption="gs", value="deirf√©ar"
        InflectedForm: caption="pl", value="deirfi√∫racha"</programlisting>
  </example>
  
  <example>
    <title>Example: mapping the captions of inflected forms to external inventories</title>
    <programlisting format="linespecific">InflectedFormCaption: value="gs", displayValue="genitive singular"
    Mapping: sameAs="http://www.lexinfo.net/ontology/3.0/lexinfo#singular"
    Mapping: sameAs= "http://www.lexinfo.net/ontology/3.0/lexinfo#genitiveCase"
InflectedFormCaption: value="pl", displayValue="plural"
    Mapping: sameAs="http://www.lexinfo.net/ontology/3.0/lexinfo#plural"</programlisting>
  </example>
  
  
</section>
    <section>
  <title><literal moreinfo="none">PartOfSpeechValue</literal></title>
  <para>Represents one of several allowed values for the <literal moreinfo="none">value</literal> property of
      <literal moreinfo="none">PartOfSpeech</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
  
  <example>
    <title>Example: restricting part-of-speech values</title>
    <programlisting format="linespecific">LexicographicResource: displayLanguage="en"
    PartOfSpeechValue: value="n", displayValue="noun"
    PartOfSpeechValue: value="v", displayValue="verb"
    PartOfSpeechValue: value="adj", displayValue= "adjective"
    Entry: headword="aardvark"
        PartOfSpeech: value="n"
    Entry: headword="speak"
        PartOfSpeech: value="v"
    Entry: headword="small"
        PartOfSpeech: value="adj"</programlisting>
  </example>
  
  <example>
    <title>Example: mapping part-of-speech values to external inventories</title>
    <programlisting format="linespecific">PartOfSpeechValue: value="n", displayValue="noun"
    Mapping: sameAs="http://www.lexinfo.net/ontology/3.0/lexinfo#noun"</programlisting>
  </example>
  
  <example>
    <title>Example: mapping complex part-of-speech values to external inventories</title>
    <programlisting format="linespecific">PartOfSpeechValue: value="Nma", displayValue="masculine animate noun"
    Mapping: sameAs="http://www.lexinfo.net/ontology/3.0/lexinfo#noun"
    Mapping: sameAs="http://www.lexinfo.net/ontology/3.0/lexinfo#masculine"
    Mapping: sameAs="http://www.lexinfo.net/ontology/3.0/lexinfo#animate"</programlisting>
  </example>
  
</section>
    <section>
  <title><literal moreinfo="none">LabelValue</literal></title>
  <para> Represents one of several allowed values for the <literal moreinfo="none">value</literal> property of
      <literal moreinfo="none">Label</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
  
  <example>
    <title>Example: restricting the values of Label objects</title>
    <programlisting format="linespecific">LexicographicResource: displayLanguage="en"
    LabelValue: value="sl", displayValue="slang"
    LabelValue: value="vul", displayValue="vulgar"</programlisting>
  </example>
  
  <example>
    <title>Example: mapping the values of Label objects to external ontologies</title>
    <programlisting format="linespecific">LexicographicResource: displayLanguage="en"
    LabelValue: value="sl", displayValue="slang"
        Mapping: sameAs="http://www.lexinfo.net/ontology/3.0/lexinfo#slangRegister"
    LabelValue: value="vul", displayValue="vulgar"
        Mapping: sameAs="http://www.lexinfo.net/ontology/3.0/lexinfo#vulgarRegister"</programlisting>
  </example>
  
</section>
    <section>
  <title><literal moreinfo="none">ExampleSource</literal></title>
  <para> Represents one of several allowed sources for the <literal moreinfo="none">sourceIdentity</literal>
    property of <literal moreinfo="none">Example</literal> objects. </para>
  <para> Properties: </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string) </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional) </para>
    </listitem>
  </itemizedlist>
  <para> Children: </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">Mapping</literal></title>
  <para>
    Represents the fact that an item in the controlled vocabulary is
    equivalent to item provided by en external authority.
  </para>
  <para>
    Parents:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">PartOfSpeechCaption</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationPartOfSpeechCaption</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">LabelCaption</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">EntrySetCaption</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">SenseSetCaption</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">SensePairCaption</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">SenseTupleCaption</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationLabelCaption</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">InflectedFormCaption</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationInflectedFormCaption</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">sameAs</literal> (URI)
      </para>
    </listitem>
  </itemizedlist>
</section>
  </section>
</section>
  <section>
  <title>Bilingual Module</title>
  <para>
    Extends DMLex Core to support the encoding of bilingual lexicographic resources.
  </para>
  <section>
    <title>Extensions to core data types</title>
    <section>
  <title><literal moreinfo="none">LexicographicResource</literal></title>
  <para>
    Additional properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">translationLanguage</literal> (optional, IETF language
        code)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">translationTranscriptionScheme</literal> (optional, reference to some external
        authority - which?) </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            The scheme (e.g. IPA) in which the
            <literal moreinfo="none">transcription</literal> property of
            <literal moreinfo="none">TranslationPronunciation</literal> objects is
            given.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">Sense</literal></title>
  <para>
    Additional children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">HeadwordTranslation</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">Example</literal></title>
  <para>
    Additional children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">ExampleTranslation</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
</section>
  </section>
  <section>
    <title>Data types</title>
    <section>
  <title><literal moreinfo="none">HeadwordTranslation</literal></title>
  <para>
    The translation equivalent of the headword in one of its senses.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Sense</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">text</literal> (non-empty string) </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be a single word, a multi-word expression, or indeed any expression in the
            target language. </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">TranslationPartOfSpeech</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationLabel</literal> (zero or more) </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationPronunciation</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationInflectedForm</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">TranslationPartOfSpeech</literal></title>
  <para>
    Any of the word classes to which the translation may be assigned,
    e.g. noun, verb, adjective, etc.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">HeadwordTranslation</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string) </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Must be one of the values defined by instances of
              <literal moreinfo="none">TranslationPartOfSpeechValue</literal>. </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">TranslationLabel</literal></title>
  <para>
    An indication of some restriction on the use of its parent. The
    restriction can be pragmatic (time, region, register), semantic
    (domain, semantic type) or formal ('no plural').
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">HeadwordTranslation</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationPronunciation</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationInflectedForm</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string) </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Must be one of the values defined by instances of
              <literal moreinfo="none">TranslaionLabelValue</literal>. </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">TranslationPronunciation</literal></title>
  <para>
    Information about the pronunciation of its parent.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">HeadwordTranslation</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationInflectedForm</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties (at least one):
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">transcription</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">recording</literal> (string: name or URL of a sound
        file)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">TranslationLabel</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">TranslationInflectedForm</literal></title>
  <para>
    A form of the inflectional paradigm of its parent.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">HeadwordTranslation</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">label</literal> (non-empty string) e.g. 'plural'
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Must be one of the values defined by instances of
              <literal moreinfo="none">TranslationInlectedFormCaption</literal>. </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">TranslationLabel</literal> (zero or more) </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationPronunciation</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">HeadwordTranslation</literal></title>
  <para>
    The translation equivalent of the headword in one of its senses.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Sense</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">text</literal> (non-empty string) </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be a single word, a multi-word expression, or indeed any expression in the
            target language. </para>
        </listitem>
      </itemizedlist>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">TranslationPartOfSpeech</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationLabel</literal> (zero or more) </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationPronunciation</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">TranslationInflectedForm</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">ExampleTranslation</literal></title>
  <para>
    The translation of an example.
  </para>
  <para>
    Child of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Example</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">text</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">listingOrder</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para> Can be implicit from the serialization.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
</section>
  </section>
  <section>
    <title>Metadata types</title>
    <section>
  <title><literal moreinfo="none">TranslationInflectedFormCaption</literal></title>
  <para>Represents one of several allowed values for the <literal moreinfo="none">caption</literal> property of
      <literal moreinfo="none">TranslationInflectedForm</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">TranslationLabelValue</literal></title>
  <para>Represents one of several allowed values for the <literal moreinfo="none">value</literal> property of
      <literal moreinfo="none">TranslationLabel</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">TranslationPartOfSpeechValue</literal></title>
  <para>Represents one of several allowed values for the <literal moreinfo="none">value</literal> property of
      <literal moreinfo="none">TranslationPartOfSpeech</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
  </section>
</section>
  <section>
  <title>Internal Linking Module</title>
  <para>Used to construct clickable (or otherwise navigable) hyperlinks between objects within the same
    <literal moreinfo="none">LexicographicResource</literal>.</para>
  <section>
    <title>Extensions to core data types</title>
    <section>
  <title><literal moreinfo="none">LexicographicResource</literal></title>
  <para>
    Additional children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">EntrySetCaption</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">SenseSetCaption</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">SensePairCaption</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">SenseTupleCaption</literal> (zero or more)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">SenseEntryTupleCaption</literal> (zero or more)
      </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">Entry</literal></title>
  <para> Additional properties: </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">id</literal>
      </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">Sense</literal></title>
  <para> Additional properties: </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">id</literal>
      </para>
    </listitem>
  </itemizedlist>
</section>
  </section>
  <section>
    <title>Relation types</title>
    <section>
  <title><literal moreinfo="none">EntrySet</literal></title>
  <para>
    Represents an unordered set of two or more entries.
    Recommended for encoding variants such for example masculine and feminine
    counterparts or spelling variants.
  </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">caption</literal> (non-empty string) eg. "variants" </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>Must be one of the values defined by instances of
            <literal moreinfo="none">EntrySetCaption</literal>.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Participants (all in the same <literal moreinfo="none">LexicographicResource</literal>):
  </para>
  <itemizedlist spacing="compact">

    <listitem>
      <para>
        <literal moreinfo="none">entry</literal> (two or more)
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Reference to an <literal moreinfo="none">Entry</literal> object.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
    
  </itemizedlist>
  
  <example>
    <title>Encoding variants</title>
    <programlisting format="linespecific">LexicographicResource: language="en", displayLanguage="en"
    LabelValue: value="eu", displayValue="European English"
    LabelValue: value="am", displayValue="American English"
    EntrySetCaption value="vars" displayValue="variants"

    Entry id="#colour" headword="colour"
        Label: value="eu"

    Entry id="#color" headword="color"
        Label: value="am"

    EntrySet caption="vars"
	entry: #colour
	entry: #color</programlisting>
  </example>

  <example>
    <title>Encoding gender pairs</title>
    <programlisting format="linespecific">LexicographicResource: language="en", displayLanguage="en"
    EntrySetCaption value="gpair" displayValue="gender pair"

    Entry id="#actor" headword="actor"

    Entry id="#actress" headword="actress"

    EntrySet caption="gpair"
	entry: #actor
	entry: #actress</programlisting>
  </example>
  
  <example>
    <title>Encoding homonyms</title>
    <programlisting format="linespecific">LexicographicResource: language="de" displayLanguage="en" translationLanguage="en"
    EntrySetCaption value="homo" displayValue="homonyms"
    PartOfSpeechValue value="n-masc" displayValue="masculine noun"
    PartOfSpeechValue value="n-fem" displayValue="feminine noun"

    Entry id="#der-see" headword="See"
	PartOfSpeech: value="n-masc"
	Sense: id="#der-see-1"
		Translation: lake

    Entry id="#die-see" headword="See"
	PartOfSpeech: value="n-fem"
	Sense: id="#die-see-1"
		Translation: see

    EntrySet caption="homo"
	entry: #der-see
	entry: #die-see</programlisting>
  </example>

</section>
    <section>
  <title><literal moreinfo="none">SenseSet</literal></title>
  <para>
    Represents an unordered set of two or more senses (typically - but not necessarily -
    belonging to two or more different entries). Recommended for encoding synonyms, near synonyms
    etc.
  </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">caption</literal> (non-empty string) eg. "synonyms" </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>Must be one of the values defined by instances of
            <literal moreinfo="none">SenseSetCaption</literal>.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Participants (all in the same <literal moreinfo="none">LexicographicResource</literal>):
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para><literal moreinfo="none">sense</literal> (two or more)</para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Reference to a <literal moreinfo="none">Sense</literal> object.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>

  <example>
    <title>Encoding near synonyms</title>
    <programlisting format="linespecific">LexicographicResource: language="de" displayLanguage="en" translationLanguage="en"
    EntrySetCaption value="nsyn" displayValue="near synonyms"
    PartOfSpeechValue value="n-masc" displayValue="masculine noun"
    PartOfSpeechValue value="n-fem" displayValue="feminine noun"
    PartOfSpeechValue value="n-neut" displayValue="neuter noun"

    Entry id="#die-see" headword="See"
       PartOfSpeech: value="n-fem"	
	Sense: id="#die-see-1"
            Translation: "see"

    Entry id="#das-meer" headword="Meer"
       PartOfSpeech: value="n-neut"
	Sense: id="#das-meer-1"
            Translation: "see"

    Entry id="#der-ozean" headword="Ozean"
       PartOfSpeech: value="n-masc"
	Sense: id="#der-ozean-1"
            Translation: "ocean"

    SenseSet caption="nsyn"
	sense: #die-see-1
	sense: #das-meer-1
	sense: #der-ozean-1</programlisting>
  </example>
  
  
</section>
    <section>
  <title><literal moreinfo="none">SensePair</literal></title>
  <para>
    Represents an undirected pair of two senses (typically - but not necessarily - belonging to
    two different entries). Recommended for representing pairs of antonyms, opposites, converses and
    so on.
  </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">caption</literal> (non-empty string) eg. "antonyms" </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>Must be one of the values defined by instances of
              <literal moreinfo="none">SensePairCaption</literal>.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Participants (all in the same <literal moreinfo="none">LexicographicResource</literal>):
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para><literal moreinfo="none">sense</literal> (exacly two)</para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Reference to a <literal moreinfo="none">Sense</literal> object.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>

  <example>
    <title>Encoding antonyms</title>
    <programlisting format="linespecific">LexicographicResource: language="en" displayLanguage="en"
    EntrySetCaption value="anto" displayValue="antonyms"

    Entry id="#buy" headword="buy"
	Sense: id="#buy-1"

    Entry id="#sell" headword="sell"
	Sense: id="#see-1"

    SensePair caption="anto"
	entry: #buy-1
	entry: #sell-1</programlisting>
  </example>
  
  
</section>
    <section>
  <title><literal moreinfo="none">SenseTuple</literal></title>
  <para>Represents a directed pair of two senses. When the two senses belong to two different
    entries, then this type is recommended for representing pairs of hypernym/hyponym,
    broader/narrower, holonym/meronym. When the two senses belong to the same entry, then this type
    is recommended for representing the relationship between a sense and a subsense.</para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">caption</literal> (non-empty string) eg. "hypernymy" </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>Must be one of the values defined by instances of
              <literal moreinfo="none">SenseTupleCaption</literal>.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Participants (all in the same <literal moreinfo="none">LexicographicResource</literal>):
  </para>
  <itemizedlist spacing="compact">

    <listitem>
      <para><literal moreinfo="none">superordinate</literal> (exacly one)</para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Reference to a <literal moreinfo="none">Sense</literal> object.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
    
    <listitem>
      <para><literal moreinfo="none">subordinate</literal> (exacly one)</para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Reference to a <literal moreinfo="none">Sense</literal> object.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>

  </itemizedlist>
  
  <example>
    <title>Encoding meronymy</title>
    <programlisting format="linespecific">LexicographicResource: language="en" displayLanguage="en"
  EntrySetCaption value="mero" displayValue="meronymy"

  Entry id="#glasses" headword="glasses"
    Sense: id="#glasses-1"

  Entry id="#microscope" headword="microscope"
    Sense: id="#microscope-1"

  Entry id="#lense" headword="lense"
    Sense: id="#lense-1"

  SenseTuple caption="mero"
    superordinate: #glasses-1
    subordinate: #lense-1

  SenseTuple caption="mero"
    superordinate: #microscope-1
    subordinate: #lense-1</programlisting>
  </example>  
  
</section>
    <section>
  <title><literal moreinfo="none">SenseEntryTuple</literal></title>
  <para>Represents a directed pair of a sense and an entry, such that the entry does
      <emphasis>not</emphasis> contain the sense. This type is recommended to be used for situations
    when the entry is expected to be show to a human user as a subentry inside the sense of another
    entry.</para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">caption</literal> (non-empty string) eg. "subentry" </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>Must be one of the values defined by instances of
              <literal moreinfo="none">SenseEntryTupleCaption</literal>.</para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <para>
    Participants (all in the same <literal moreinfo="none">LexicographicResource</literal>):
  </para>
  <itemizedlist spacing="compact">
    
    <listitem>
      <para><literal moreinfo="none">superordinate</literal> (exacly one)</para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Reference to a <literal moreinfo="none">Sense</literal> object.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
    
    <listitem>
      <para><literal moreinfo="none">subordinate</literal> (exacly one)</para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Reference to an <literal moreinfo="none">Entry</literal> object.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
    
  </itemizedlist>
  
  <example>
    <title>Example: encoding a subentry at subsense level</title>
    <para>
      In this example, when the entry for safe is being shown to a human user,
      the entry for better safe than sorry is supposed to appear as a subentry at at the end of the first sense.
    </para>
    <programlisting format="linespecific">LexicographicResource: language="en", displayLanguage="en"
  SenseEntryTupleCaption value="idiosub" displayValue="idiom subentry"

  Entry: id="#safe" headword="safe"
    Sense: id="#safe-1" indicator="protected from harm"
      Example: value="It isn't safe to park here."
    Sense: id="#safe-2" indicator="not likely to cause harm"
      Example: value="Is the ride safe for a small child?"

  Entry: id="#bsts" headword="better safe than sorry"
    Sense: definition="you should be careful even if it seems unnecessary"

  SenseEntryTuple: caption: "idiosub"
    superordinate: #safe-1
    subordinate: #bsts</programlisting>
  </example>
  
  <example>
    <title>Example: encoding a subentry at sense level</title>
    <para>
      In this example, when the entry for bible is being shown to the human user,
      the entry for the Bible is supposed to be appear there as a subentry, as if it were its first sense. 
    </para>
    <programlisting format="linespecific">LexicographicResource: language="en", displayLanguage="en"
  SenseEntryTupleCaption value="propnamesub" displayValue="proper name subentry"

  Entry: id="#the-bible" headword="the Bible"
    Sense: id="the-bible-1" definition="the book considered holy by Christians..."
  
  Entry: id="#bible" headword="bible" 
    Sense: id="#bible-1" //empty sense, serves as a container for "the Bible"
    Sense: id="#bible-2" definition="a book considered important..."
  
  SenseEntryTuple: caption="propnamesub"
    superordinate: #bible-1
    subordinate: #the-bible  </programlisting>
  </example>
  
  
</section>
  </section>
  <section>
    <title>Metadata types</title>
    <section>
  <title><literal moreinfo="none">EntrySetCaption</literal></title>
  <para> Represents one of several allowed values for the <literal moreinfo="none">caption</literal> property of
      <literal moreinfo="none">EntrySet</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">SenseSetCaption</literal></title>
  <para> Represents one of several allowed values for the <literal moreinfo="none">caption</literal> property of
      <literal moreinfo="none">SenseSet</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">SensePairCaption</literal></title>
  <para> Represents one of several allowed values for the <literal moreinfo="none">caption</literal> property of
      <literal moreinfo="none">SensePair</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">SenseTupleCaption</literal></title>
  <para> Represents one of several allowed values for the <literal moreinfo="none">caption</literal> property of
      <literal moreinfo="none">SenseTuple</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">SenseEntryTupleCaption</literal></title>
  <para> Represents one of several allowed values for the <literal moreinfo="none">caption</literal> property of
      <literal moreinfo="none">SenseEntryTuple</literal> objects. </para>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">value</literal> (non-empty string)
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">displayValue</literal> (optional)
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Children:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Mapping</literal> (zero or more) </para>
    </listitem>
  </itemizedlist>
</section>
  </section>
</section>
  <section>
  <title>External Linking Module</title>
  <para>Used to construct links between objects from different lexicographic resources.</para>
  <section>
    <title>Relation types</title>
    <section>
  <title><literal moreinfo="none">Same</literal></title>
  <para> Represents the fact that two or more senses from two or more lexicographic resources are
    semantically the same.</para>
  <para>
    Participants:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Sense</literal> (two or more, no two of which belong to the same
          <literal moreinfo="none">LexicographicResource</literal>) </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">Subsumption</literal></title>
  <para> Represents the fact that one sense from one lexicographic resource is semantically wholly
    contained inside another sense from another lexicographic resource.</para>
  <para>
    Participants:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>the broader <literal moreinfo="none">Sense</literal> (exactly one) </para>
    </listitem>
    <listitem>
      <para>the narrower <literal moreinfo="none">Sense</literal> (exactly one)</para>
    </listitem>
  </itemizedlist>
  <para>The two senses must not be within the <literal moreinfo="none">LexicographicResource</literal>.</para>
</section>
    <section>
  <title><literal moreinfo="none">Overlap</literal></title>
  <para> Represents the fact that two or more senses from two or more lexicographic resources
    overlap semantically, without either one being semantically wholly contained inside the
    other.</para>
  <para> Participants: </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">Sense</literal> (two or more, no two of which belong to the same
          <literal moreinfo="none">LexicographicResource</literal>) </para>
    </listitem>
  </itemizedlist>
</section>
  </section>
</section>
  <section>
  <title>Inline Markup Module</title>
  <section>
    <title>Marker types</title>
    <section>
  <title><literal moreinfo="none">PlaceholderMarker</literal></title>
  <para>
    Marks up a substring inside a headword (or inside a headword
    translation) which is not part of the expression itself but stands
    for things that can take its place, or constitutes some kind of
    meta-notation. Examples:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">beat [sb.] up</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">continue [your] studies</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Markup of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">headword</literal> property of <literal moreinfo="none">Entry</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">text</literal> property of
        <literal moreinfo="none">HeadwordTranslation</literal>
      </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">HeadwordMarker</literal></title>
  <para>
    Marks up a substring inside an example (or inside an example
    translation) which corresponds to the headword (or to a translation
    of the headword).
  </para>
  <para>
    Markup of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">text</literal> property of <literal moreinfo="none">Example</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">text</literal> property of
        <literal moreinfo="none">ExampleTranslation</literal>
      </para>
    </listitem>
  </itemizedlist>
</section>
    <section>
  <title><literal moreinfo="none">CollocateMarker</literal></title>
  <para>
    Marks up a substring inside an example (or inside an example
    translation) where an important collocate of the headword (or of its translation)
    occurs.
  </para>
  <para>
    Markup of:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">text</literal> property of <literal moreinfo="none">Example</literal>
      </para>
    </listitem>
    <listitem>
      <para>
        <literal moreinfo="none">text</literal> property of
        <literal moreinfo="none">ExampleTranslation</literal>
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Properties:
  </para>
  <itemizedlist spacing="compact">
    <listitem>
      <para>
        <literal moreinfo="none">lemma</literal>
      </para>
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            Optional. The lemmatized form of the collocate.
          </para>
        </listitem>
      </itemizedlist>
    </listitem>
  </itemizedlist>
  <example>
    <title>Marking up the headword and a collocate inside an example</title>
    <programlisting format="linespecific">Example: value="The coroner performed an autopsy."
  HeadwordMarker: value=first occurence of "autopsy"
  CollocateMarker: value=first occurence of "performed" lemma="perform"</programlisting>
  </example>
</section>
  </section>
</section>
  
  <!-- Serializations includes  -->
  <section id="XML_serialization" role="normative | informative">
  <title>DMLex XML serialization</title>
  <section id="XML_Intro">
    <title>Introduction</title>
    <para>This serialization defines ... ELABORATE</para>
    <note>
      <para>This serialization specification chiefly describes how... ELABORATE</para>
    </note>
    <warning>
      <para>There is an important difference or similar ELABORATE</para>
      <para>However, ‚Ä¶ ELABORATE. </para>
      <para>Implementers who wish to better access... ELABORATE.</para>
    </warning>
  </section>
  <section id="XML_artifacts">
    <title>DMLex namespaces and validation artifacts for its XML serialization</title>
    <para>This
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>normative/informative<?oxy_custom_end ?>
      XML serialization of DMLex Version 1.0 makes use of all DMLex namespaces (both core and
      modules) namespaces: <code><ulink url="http://docs.oasis-open.org/lexidma/ns/dmlex-1.0">http://docs.oasis-open.org/lexidma/ns/dmlex-1.0</ulink></code>, and
        <code>urn:oasis:names:tc:lexidma:module_01:1.0</code>, and
        <code><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>other namespace
        identifiers as necessary<?oxy_custom_end ?></code>. NAMESPACE SUPPORT IN XML WILL NEED </para>
    <para>Validation artifacts
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[specify type of
      artifacts if any available at all]<?oxy_custom_end ?> for this RDF serialization are available
      at <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype1">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype1</ulink>, <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename2.filetype1">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename2.filetype1</ulink>,
      and <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype2">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype2</ulink>. </para>
    <note>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[Potential note
        content]<?oxy_custom_end ?></para>
      <para>. </para>
    </note>
  </section>
  <section id="XML_Conformance">
    <title>Conformance to the XML serialization of DMLex Version 1.0</title>
    <note>
      <para>Some data categories.... Other data categories ‚Ä¶. The below conformance
        statement is relevant for all data categories expressible in the XML serialization.. There is no interrelation between data
        categories/ data categories are related as explained in ....</para>
    </note>
    <!--   -->
    <itemizedlist>
      <title>Processing Requirements</title>
      <listitem>
        <para>Conformant Processors <glossterm>must</glossterm> be able to use and compute at least
          all the <firstterm>DMLex Core</firstterm> data categories encoded in <firstterm>DMlex XML
            Instances</firstterm> as per certain conformance clauses
          <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?></para>
        <itemizedlist>
          <listitem>
            <para>Subrequirement, ELABORATE.</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>Conformant <firstterm>Agents</firstterm>
          <glossterm>must</glossterm> be DMLex Conformant in the sense of DMLex <link linkend="ApplicationConformance">Application Conformance</link> and also
          <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>.</para>
        <para>In particular:</para>
        <itemizedlist>
          <listitem>
            <para>Conformant <firstterm>Creators</firstterm>
              <glossterm>must</glossterm> be capable of <firstterm>Creating</firstterm>
              <firstterm>DMlex XML Instances</firstterm>
              <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>. </para>
          </listitem>
          <listitem>
            <para> Conformant <firstterm>Enrichers</firstterm>
              <glossterm>must</glossterm> be capable of <firstterm>Enriching</firstterm>
              <firstterm>DMlex XML Instances</firstterm> with at least ELABORATE.. .</para>
          </listitem>
          <listitem>
            <para>Conformant <firstterm>Modifiers</firstterm>
              <glossterm>must</glossterm> be capable of updating at least one data category according to its own Constraints and Processing Requirements
              as specified in ELABORATE.</para>
          </listitem>
          <listitem>
            <para>Etc. ELABORATE.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Other XML serialization provisions</title>
    <para> Other provisions.
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?></para>
    <warning>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>. </para>
    </warning>
    <note>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?></para>
      <para>Another informative pointer.</para>
    </note>
    <itemizedlist>
      <title>Processing Requirements</title>
      <listitem>
        <para><firstterm>Writers</firstterm>
          <glossterm>must</glossterm>
          <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>
          in <firstterm>DMLex XML Instances</firstterm>.</para>
      </listitem>
    </itemizedlist>
  </section>
  

  <section id="XML_elements">
    <title>XML serialization elements</title>
    <para>DMLex XML serialization uses the following elements:</para>
    <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[comma separated list
      of element olinks]<?oxy_custom_end ?></para>
    <para> </para>
    <section id="XML_diagram">
      <title>Diagram</title>
      <para>Legend:</para>
      <simplelist type="vert">
        <member>1 = one</member>
        <member>+ = one or more</member>
        <member>? = zero or one</member>
        <member>* = zero, one or more</member>
      </simplelist>
      <programlisting format="linespecific">
programlisting code to display the diagram
    </programlisting>
    </section>
<!--  XML object includes  --> 
    </section>
  <section id="XML_attributes">
    <title>XML serialization attributes</title>
    <para>The XML serialization uses the following attributes:</para>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[comma separated list
        of attribute olinks]<?oxy_custom_end ?></para>
      <para> </para>
    <!--  XML attribute includes from all namespaces  -->
    
  </section>
  <section id="XML_example">
    <title>Example file</title>
    <example>
      <title>Example of a couple of DMLex entries RDF serialized</title>
      <para>The following example file includes markup related to several <firstterm>DMLex Core and Module</firstterm> data
        categories.</para>
      <programlisting format="linespecific">&lt;!-- example file metadata --&gt;

programlisting code</programlisting>
    </example>
  </section>
</section>
  <section id="JSON_serialization" role="normative | informative">
  <title>DMLex JSON serialization</title>
  <section id="JSON_Intro">
    <title>Introduction</title>
    <para>This serialization defines ... ELABORATE</para>
    <note>
      <para>This serialization specification chiefly describes how... ELABORATE</para>
    </note>
    <warning>
      <para>There is an important difference or similar ELABORATE</para>
      <para>However, ‚Ä¶ ELABORATE. </para>
      <para>Implementers who wish to better access... ELABORATE.</para>
    </warning>
  </section>
  <section id="JSON_artifacts">
    <title>DMLex namespaces and validation artifacts for its JSON serialization</title>
    <para>This
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>normative/informative<?oxy_custom_end ?>
      JSON serialization of DMLex Version 1.0 makes use of all DMLex namespaces (both core and
      modules) namespaces: <code><ulink url="http://docs.oasis-open.org/lexidma/ns/dmlex-1.0">http://docs.oasis-open.org/lexidma/ns/dmlex-1.0</ulink></code>, and
        <code>urn:oasis:names:tc:lexidma:module_01:1.0</code>, and
        <code><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>other namespace
        identifiers as necessary<?oxy_custom_end ?></code>. NAMESPACE SUPPORT IN JSON WILL NEED </para>
    <para>Validation artifacts
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[specify type of
      artifacts if any available at all]<?oxy_custom_end ?> for this RDF serialization are available
      at <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype1">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype1</ulink>, <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename2.filetype1">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename2.filetype1</ulink>,
      and <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype2">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype2</ulink>. </para>
    <note>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[Potential note
        content]<?oxy_custom_end ?></para>
      <para>. </para>
    </note>
  </section>
  <section id="JSON_Conformance">
    <title>Conformance to the JSON serialization of DMLex Version 1.0</title>
    <note>
      <para>Some data categories.... Other data categories ‚Ä¶. The below conformance
        statement is relevant for all data categories expressible in the JSON serialization.. There is no interrelation between data
        categories/ data categories are related as explained in ....</para>
    </note>
    <!--   -->
    <itemizedlist>
      <title>Processing Requirements</title>
      <listitem>
        <para>Conformant Processors <glossterm>must</glossterm> be able to use and compute at least
          all the <firstterm>DMLex Core</firstterm> data categories encoded in <firstterm>DMlex JSON
            Instances</firstterm> as per certain conformance clauses
          <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?></para>
        <itemizedlist>
          <listitem>
            <para>Subrequirement, ELABORATE.</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>Conformant <firstterm>Agents</firstterm>
          <glossterm>must</glossterm> be DMLex Conformant in the sense of DMLex <link linkend="ApplicationConformance">Application Conformance</link> and also
          <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>.</para>
        <para>In particular:</para>
        <itemizedlist>
          <listitem>
            <para>Conformant <firstterm>Creators</firstterm>
              <glossterm>must</glossterm> be capable of <firstterm>Creating</firstterm>
              <firstterm>DMlex JSON Instances</firstterm>
              <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>. </para>
          </listitem>
          <listitem>
            <para> Conformant <firstterm>Enrichers</firstterm>
              <glossterm>must</glossterm> be capable of <firstterm>Enriching</firstterm>
              <firstterm>DMlex JSON Instances</firstterm> with at least ELABORATE.. .</para>
          </listitem>
          <listitem>
            <para>Conformant <firstterm>Modifiers</firstterm>
              <glossterm>must</glossterm> be capable of updating at least one data category according to its own Constraints and Processing Requirements
              as specified in ELABORATE.</para>
          </listitem>
          <listitem>
            <para>Etc. ELABORATE.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Other JSON serialization provisions</title>
    <para> Other provisions.
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?></para>
    <warning>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>. </para>
    </warning>
    <note>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?></para>
      <para>Another informative pointer.</para>
    </note>
    <itemizedlist>
      <title>Processing Requirements</title>
      <listitem>
        <para><firstterm>Writers</firstterm>
          <glossterm>must</glossterm>
          <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>
          in <firstterm>DMLex JSON Instances</firstterm>.</para>
      </listitem>
    </itemizedlist>
  </section>
  

  <section id="JSON_objects">
    <title>JSON serialization objects</title>
    <para>DMLex JSON serialization uses the following objects:</para>
    <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[comma separated list
      of object olinks]<?oxy_custom_end ?></para>
    <para> </para>
    <section id="JSON_diagram">
      <title>Diagram</title>
      <para>Legend:</para>
      <simplelist type="vert">
        <member>1 = one</member>
        <member>+ = one or more</member>
        <member>? = zero or one</member>
        <member>* = zero, one or more</member>
      </simplelist>
      <programlisting format="linespecific">
programlisting code to display the diagram
    </programlisting>
    </section>
<!--  JSON object includes  --> 
    </section>
  <section id="JSON_properties">
    <title>JSON serialization properties</title>
    <para>The JSON serialization uses the following properties:</para>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[comma separated list
        of properties olinks]<?oxy_custom_end ?></para>
      <para> </para>
    <!--  JSON attribute includes from all namespaces  -->
    
  </section>
  <section id="JSON_example">
    <title>Example file</title>
    <example>
      <title>Example of a couple of DMLex entries RDF serialized</title>
      <para>The following example file includes markup related to several <firstterm>DMLex Core and Module</firstterm> data
        categories.</para>
      <programlisting format="linespecific">&lt;!-- example file metadata --&gt;

programlisting code</programlisting>
    </example>
  </section>
</section>
  <section id="RDF_serialization" role="normative | informative">
  <title>DMLex RDF serialization</title>
  <section id="RDF_Intro">
    <title>Introduction</title>
    <para>This serialization defines ... ELABORATE</para>
    <note>
      <para>This serialization specification chiefly describes how... ELABORATE</para>
    </note>
    <warning>
      <para>There is an important difference or similar ELABORATE</para>
      <para>However, ‚Ä¶ ELABORATE. </para>
      <para>Implementers who wish to better access... ELABORATE.</para>
    </warning>
  </section>
  <section id="RDF_artifacts">
    <title>DMLex namespaces and validation artifacts for its RDF serialization</title>
    <para>This
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>normative/informative<?oxy_custom_end ?>
      RDF serialization of DMLex Version 1.0 makes use of all DMLex namespaces (both core and
      modules) namespaces: <code><ulink url="http://docs.oasis-open.org/lexidma/ns/dmlex-1.0">http://docs.oasis-open.org/lexidma/ns/dmlex-1.0</ulink></code>, and
        <code>urn:oasis:names:tc:lexidma:module_01:1.0</code>, and
        <code><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>other namespace
        identifiers as necessary<?oxy_custom_end ?></code>.</para>
    <para>Validation artifacts
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[specify type of
      artifacts if any available at all]<?oxy_custom_end ?> for this JSON serialization are available
      at <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype1">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype1</ulink>, <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename2.filetype1">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename2.filetype1</ulink>,
      and <ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype2">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/filename1.filetype2</ulink>. </para>
    <note>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[Potential note
        content]<?oxy_custom_end ?></para>
      <para>. </para>
    </note>
  </section>
  <section id="RDF_Conformance">
    <title>Conformance to the RDF serialization of DMLex Version 1.0</title>
    <note>
      <para>Some Module 01 data categories.... Other data categories ‚Ä¶. The below conformance
        statement is only relevant for data categories .. There is no interrelation between data
        categories/ data categories are related as explained in ....</para>
    </note>
    <!--   -->
    <itemizedlist>
      <title>Processing Requirements</title>
      <listitem>
        <para>Conformant Processors <glossterm>must</glossterm> be able to use and compute at least
          all the <firstterm>DMLex Core</firstterm> data categories encoded in <firstterm>DMlex RDF
            Instances</firstterm> as per certain conformance clauses
          <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?></para>
        <itemizedlist>
          <listitem>
            <para>Subrequirement, ELABORATE.</para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>Conformant <firstterm>Agents</firstterm>
          <glossterm>must</glossterm> be DMLex Conformant in the sense of DMLex <link linkend="ApplicationConformance">Application Conformance</link> and also
          <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>.</para>
        <para>In particular:</para>
        <itemizedlist>
          <listitem>
            <para>Conformant <firstterm>Creators</firstterm>
              <glossterm>must</glossterm> be capable of <firstterm>Creating</firstterm>
              <firstterm>DMlex RDF Instances</firstterm>
              <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>. </para>
          </listitem>
          <listitem>
            <para> Conformant <firstterm>Enrichers</firstterm>
              <glossterm>must</glossterm> be capable of <firstterm>Enriching</firstterm>
              <firstterm>DMlex Instances</firstterm> with at least one of the above specified Module
              01 data categories.</para>
          </listitem>
          <listitem>
            <para>Conformant <firstterm>Modifiers</firstterm>
              <glossterm>must</glossterm> be capable of updating at least one of the above specified
              Module 01 data categories according to its own Constraints and Processing Requirements
              as specified in the Module 01 Module.</para>
          </listitem>
          <listitem>
            <para>Etc. ELABORATE.</para>
          </listitem>
        </itemizedlist>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Other RDF serialization provisions</title>
    <para> Other provisions.
      <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?></para>
    <warning>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>. </para>
    </warning>
    <note>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?></para>
      <para>Another informative pointer.</para>
    </note>
    <itemizedlist>
      <title>Processing Requirements</title>
      <listitem>
        <para><firstterm>Writers</firstterm>
          <glossterm>must</glossterm>
          <?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>ELABORATE<?oxy_custom_end ?>
          in <firstterm>DMLex RDF Instances</firstterm>.</para>
      </listitem>
    </itemizedlist>
  </section>
  

  <section id="RDF_objects">
    <title>RDF serialization objects</title>
    <para>DMLex RDF serialization uses the following objects:</para>
    <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[comma separated list
      of object olinks]<?oxy_custom_end ?></para>
    <para> </para>
    <section id="RDF_diagram">
      <title>Diagram</title>
      <para>Legend:</para>
      <simplelist type="vert">
        <member>1 = one</member>
        <member>+ = one or more</member>
        <member>? = zero or one</member>
        <member>* = zero, one or more</member>
      </simplelist>
      <programlisting format="linespecific">
programlisting code to display the diagram
    </programlisting>
    </section>
<!--  RDF object includes  --> 
    </section>
  <section id="RDF_attributes">
    <title>RDF serialization attributes</title>
    <para>The RDF serialization uses the following attributes:</para>
      <para><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>[comma separated list
        of object olinks]<?oxy_custom_end ?></para>
      <para> </para>
    <!--  RDF attribute includes from all namespaces  -->
    
  </section>
  <section id="RDF_example">
    <title>Example file</title>
    <example>
      <title>Example of a couple of DMLex entries RDF serialized</title>
      <para>The following example file includes markup related to several <firstterm>DMLex Core and Module</firstterm> data
        categories.</para>
      <programlisting format="linespecific">&lt;!-- example file metadata --&gt;

programlisting code</programlisting>
    </example>
  </section>
</section>
  <appendix role="normative" id="references">
    <title>References</title>
    <para>This appendix contains the normative and informative references that are used in this
      document. Normative references are specific (identified by date of publication and/or edition
      number or Version number) and Informative references are either specific or
      non-specific.</para>
    <para>While any hyperlinks included in this appendix were valid at the time of publication,
      OASIS cannot guarantee their long-term validity.</para>
    <section id="normativeReferences" role="normative">
      <title>Normative references</title>
      <para>The following documents are referenced in such a way that some or all of their content
        constitutes requirements of this document.
        <!-- note that at least one paragraph (and it can be empty) is needed to satisfy the DocBook document model -->
      </para>
      <bibliography>
        <title/>
        <bibliomixed id="bcp14">
          <abbrev>BCP 14</abbrev> is a concatenation of [RFC 2119] and [RFC 8174] </bibliomixed>
        <bibliomixed id="rfc2119"><abbrev>RFC 2119</abbrev> S. Bradner, <title>Key words for use in
            RFCs to Indicate Requirement Levels</title>, <citetitle>
            <ulink url="https://www.ietf.org/rfc/rfc2119.txt">https://www.ietf.org/rfc/rfc2119.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 2119, March 1997.</bibliomixed>
        <bibliomixed id="rfc8174"><abbrev>RFC 8174</abbrev> B. Leiba, <title>Ambiguity of Uppercase
            vs Lowercase in RFC 2119 Key Words</title>, <citetitle>
            <ulink url="https://www.ietf.org/rfc/rfc8174.txt">https://www.ietf.org/rfc/rfc8174.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 8174, May 2017.</bibliomixed>
        <bibliomixed id="bcp47"><abbrev>BCP 47</abbrev> M. Davis, <title>Tags for Identifying
            Languages</title>, <citetitle>
            <ulink url="http://tools.ietf.org/html/bcp47">http://tools.ietf.org/html/bcp47</ulink>
          </citetitle> IETF (Internet Engineering Task Force).</bibliomixed>
        <bibliomixed id="rfc3552"><abbrev>RFC 3552</abbrev> R. Escrola, B. Korver, <title>Guidelines for Writing RFC Text on Security Considerations</title>, <citetitle>
            <ulink url="https://www.tools.ietf.org/rfc/rfc3552.txt">https://www.tools.ietf.org/rfc/rfc3552.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 3552, July 2003.</bibliomixed>
        <bibliomixed id="exampleid"><abbrev><?oxy_custom_start type="oxy_content_highlight" color="255,198,140"?>EXAMPLE_ABBREV</abbrev>
          N. Surname, A. Surname, <title>Exampe Title</title>, <citetitle><ulink url="example.org/citetitle">example.org/citetitle</ulink>Example
          Citetitle</citetitle>, Month dd, yyyy.<?oxy_custom_end ?></bibliomixed>
        <bibliomixed id="ITS20"><abbrev>ITS</abbrev> David Filip, Shaun McCance, Dave Lewis,
          Christian Lieske, Arle Lommel, Jirka Kosek, Felix Sasaki, Yves Savourel
            <title>Internationalization Tag Set (ITS) Version 2.0</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/its20/">http://www.w3.org/TR/its20/</ulink>
          </citetitle> W3C Recommendation 29 October 2013.</bibliomixed>
        <bibliomixed><abbrev>JSON</abbrev>
          <title>The JavaScript Object Notation (JSON) Data Interchange Format</title>, <citetitle>
            <ulink url="https://tools.ietf.org/html/rfc8259">https://tools.ietf.org/html/rfc8259</ulink>
          </citetitle> IETF RFC 8259 December 2017. </bibliomixed>
        <bibliomixed id="bib_datetime"><abbrev>NOTE-datetime</abbrev> M. Wolf, C. Wicksteed,
            <title>Date and Time Formats</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/NOTE-datetime">http://www.w3.org/TR/NOTE-datetime</ulink>
          </citetitle> W3C Note, 15th September 1997.</bibliomixed>
        <bibliomixed id="NVDL"><abbrev>NVDL</abbrev> International Standards Organization,
            <title>ISO/IEC 19757-4, Information Technology - Document Schema Definition Languages
            (DSDL) - Part 4: Namespace-based Validation Dispatching Language (NVDL)</title>, <citetitle>
            <ulink url="http://standards.iso.org/ittf/PubliclyAvailableStandards/c038615_ISO_IEC_19757-4_2006(E).zip">
              http://standards.iso.org/ittf/PubliclyAvailableStandards/c038615_ISO_IEC_19757-4_2006(E).zip</ulink>
          </citetitle> ISO, June 1, 2006.</bibliomixed>
        <bibliomixed id="rfc3987"><abbrev>RFC 3987</abbrev> M. Duerst and M. Suignard,
            <title>Internationalized Resource Identifiers (IRIs)</title>, <citetitle>
            <ulink url="https://www.ietf.org/rfc/rfc3987.txt">https://www.ietf.org/rfc/rfc3987.txt</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 3987, January 2005.</bibliomixed>
        <bibliomixed id="rfc7303"><abbrev>RFC 7303</abbrev> H. Thompson and C. Lilley, <title>XML
            Media Types</title>, <citetitle>
            <ulink url="https://www.tools.ietf.org/html/rfc7303">
              https://www.tools.ietf.org/html/rfc7303</ulink>
          </citetitle> IETF (Internet Engineering Task Force) RFC 7303, July 2014.</bibliomixed>
        <bibliomixed id="Schematron"><abbrev>Schematron</abbrev> International Standards
          Organization, <title>ISO/IEC 19757-3, Information Technology - Document Schema Definition
            Languages (DSDL) - Part 3: Rule-Based Validation ‚Äî Schematron (Second Edition)</title>, <citetitle>
            <ulink url="http://standards.iso.org/ittf/PubliclyAvailableStandards/c055982_ISO_IEC_19757-3_2016.zip">
              http://standards.iso.org/ittf/PubliclyAvailableStandards/c055982_ISO_IEC_19757-3_2016.zip</ulink>
          </citetitle> ISO, January 15, 2016.</bibliomixed>
        <bibliomixed id="uax9"><abbrev>UAX #9</abbrev> M. Davis, A. Lanin, A. Glass, <title>UNICODE
            BIDIRECTIONAL ALGORITHM</title>, <citetitle>
            <ulink url="http://www.unicode.org/reports/tr9/tr9-35.html">http://www.unicode.org/reports/tr9/tr9-35.html</ulink>
          </citetitle> Unicode Bidirectional Algorithm, May 18, 2016.</bibliomixed>
        <bibliomixed id="uax15"><abbrev>UAX #15</abbrev> M. Davis, K. Whistler, <title>UNICODE
            NORMALIZATION FORMS</title>, <citetitle>
            <ulink url="http://www.unicode.org/reports/tr15/tr15-44.html">http://www.unicode.org/reports/tr15/tr15-44.html</ulink>
          </citetitle> Unicode Normalization Forms, February 24, 2016.</bibliomixed>
        <bibliomixed id="Unicode"><abbrev>Unicode</abbrev> The Unicode Consortium, <title>The
            Unicode Standard</title>, <citetitle>
            <ulink url="http://www.unicode.org/versions/Unicode9.0.0/">http://www.unicode.org/versions/Unicode9.0.0/</ulink>
          </citetitle> Mountain View, CA: The Unicode Consortium, June 21, 2016.</bibliomixed>
        <bibliomixed id="XLIFF21"><abbrev>XLIFF 2.1</abbrev> David Filip, Tom Comerford, Soroush
          Saadatfar, Felix Sasaki, and Yves Savourel, eds. <title>XLIFF Version 2.0</title>, <citetitle>
            <ulink url="http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html">http://docs.oasis-open.org/xliff/xliff-core/v2.1/os/xliff-core-v2.1-os.html</ulink>
          </citetitle> OASIS Standard 13 February 2018 </bibliomixed>
        <bibliomixed id="bib_XML"><abbrev>XML</abbrev> W3C, <title>Extensible Markup Language (XML)
            1.0</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/xml/">http://www.w3.org/TR/xml/</ulink>
          </citetitle> (Fifth Edition) W3C Recommendation 26 November 2008.</bibliomixed>
        <bibliomixed id="xml_namespace"><abbrev>XML namespace</abbrev> W3C, <title>Schema document
            for namespace http://www.w3.org/XML/1998/namespace</title>
          <citetitle><ulink url="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</ulink></citetitle> [<edition><ulink url="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</ulink>]</edition>. at <edition><ulink url="http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd">http://docs.oasis-open.org/lexidma/dmlex/v1.0/wd01/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd</ulink></edition>
          in this distribution</bibliomixed>
        <bibliomixed id="XMLCatalogs"><abbrev>XML Catalogs</abbrev> Norman Walsh, <title>XML
            Catalogs</title>, <citetitle>
            <ulink url="https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html">https://www.oasis-open.org/committees/download.php/14809/xml-catalogs.html</ulink>
          </citetitle> OASIS Standard V1.1, 07 October 2005.</bibliomixed>
        <bibliomixed id="XMLSchema"><abbrev>XML Schema</abbrev> W3C, <title>XML Schema</title>,
            <citetitle> refers to the two part standard comprising <link linkend="XMLSchema1">[XML
              Schema Structures]</link> and <link linkend="XMLSchema2">[XML Schema Datatypes]</link>
          </citetitle> (Second Editions) W3C Recommendations 28 October 2004.</bibliomixed>
        <bibliomixed id="XMLSchema2"><abbrev>XML Schema Datatypes</abbrev> W3C, <title>XML Schema
            Part 2: Datatypes</title>, <citetitle>
            <ulink url="http://www.w3.org/TR/xmlschema-2/">http://www.w3.org/TR/xmlschema-2/</ulink>
          </citetitle> (Second Edition) W3C Recommendation 28 October 2004.</bibliomixed>
        <bibliomixed id="XMLSchema1"><abbrev>XML Schema Structures</abbrev> W3C, <title>XML Schema
            Part 1: Structures</title>, <citetitle>
            <ulink url="https://www.w3.org/TR/xmlschema-1/">https://www.w3.org/TR/xmlschema-1/</ulink>
          </citetitle> (Second Edition) W3C Recommendation 28 October 2004.</bibliomixed>
      </bibliography>
    </section>
    <section role="informative" id="informativeReferences">
      <title>Informative references</title>
      <para>The following referenced documents are not required for the application of this document
        but may assist the reader with regard to a particular subject area.
        <!-- note that at least one paragraph (and it can be empty) is needed to satisfy the DocBook document model -->
      </para>
      <bibliography>
        <title/>
        <bibliomixed id="biblio_ldml"><abbrev>LDML</abbrev>
          <title>Unicode Locale Data Markup Language</title>
          <citetitle>
            <ulink url="http://unicode.org/reports/tr35/">http://unicode.org/reports/tr35/</ulink>
          </citetitle></bibliomixed>
        <bibliomixed id="uax29"><abbrev>UAX #29</abbrev> M. Davis, <title>UNICODE TEXT
            SEGMENTATION</title>, <citetitle>
            <ulink url="http://www.unicode.org/reports/tr29/">http://www.unicode.org/reports/tr29/</ulink>
          </citetitle> Unicode text Segmentation.</bibliomixed>
      </bibliography>
    </section>
  </appendix>
  <appendix role="informative" id="coreValidation">
    <title>Machine Readable Validation Artifacts</title>
    <para>CURRENTLY NO VALIDATION ARTIFACTS FORESEEN FOR THE OM.. JUST FOR SERIALIZATIONS</para>
    <para> MAY LIST CONFORMANT ARTIFACTS FOR SPECIFIC SERILIZATIONS AT A LATER STAGE </para>
    <!-- 
      <orderedlist>
        <listitem id="CoreSchema">
          <para><firstterm>DMLex Core</firstterm> <link linkend="XMLSchema">[XML Schema]</link>,</para>
          <para><ulink url="&this-loc;/schemas/dmlex&-cschversion;.xsd"
            >&this-loc;/schemas/dmllex-&cschversion;.xsd</ulink></para>

        </listitem>
        <listitem id="DMLexCatalog">
          <para><link linkend="XMLCatalogs">[XML Catalog]</link> of <firstterm>DMLex-defined</firstterm> XML Schemas,</para>
          <para><ulink url="&this-loc;/schemas/catalog.xml"
            >&this-loc;/schemas/catalog.xml</ulink></para>
        </listitem>
        <listitem id="NVDL">
          <para>Master <link linkend="NVDL">[NVDL]</link> file governing validation of all <firstterm>DMLex-defined</firstterm>
            namespaces by XML Schemas, Schematron Schemas and other rules if and as required,</para>
          <para><ulink url="&this-loc;/schemas/advanced_validation.nvdl.xml"
            >&this-loc;/schemas/advanced_validation.nvdl</ulink></para>
        </listitem>
        <listitem id="CoreSchematron">
          <para><firstterm>DMLex Core</firstterm> <link linkend="Schematron">[Schematron]</link> Schema, </para>
          <para><ulink url="&this-loc;/schemas/dmlex-&cschversion;.sch"
            >&this-loc;/schemas/dmlex-&cschversion;.sch</ulink></para>
        </listitem>
        <listitem>
          <para>XML and Schematron Schemas of <firstterm>DMLex Modules</firstterm> are referenced
            from those modules.</para>
        </listitem>
      </orderedlist>



      <warning>
        <para>NVDL is not capable of discerning Schemtaron Warnings from Schematron Errors.
          Therefore all Schematron Warnings will be reported as Errors when initiating the
          validation from the NVDL schema. Also most of the existing Schematron implementations are
          not capable of discerning Warnings from Errors, thus implementers are encouraged to re-use
          the provided Schematron schemas in custom made validation services that can make this
          distinction. Currently, the Warning/Error distinction is only important when evaluating
          adherence to Processing Requirements for [ELABORATE].</para>
      </warning>

    </para>
     -->
    <!--   <para>[Relax NG schemas of <firstterm>DMLex Core and Modules</firstterm> are provided. Although the Relax NG schemas are intended as normative validation artifacts, the XML Schema 1.0 [add normative reference] schemas and Schematron [add normative reference] schemas have precedence in case of conflicting validation results.]
      [This is only relevant if Relax NG is provided.]</para> -->
    <!--  <xi:include href="core/tree.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/> -->
    <!--  LEXIDMA TC may decide to include the schema listings
    <xi:include href="core/catalog.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>

    <xi:include href="core/schema.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
 -->
    <!--  language for potential inclusion of support schemas such as the xml namespace schema
    <section>
      <title>Support Schemas</title>
      <para>Third party support schemas that are normatively referenced from this specification or
        from the machine readable artifacts that are a part of this multipart product are distributed
        along with the <firstterm>DMLex-defined</firstterm> schemas in a subfolder named
        <code>informativeCopiesOf3rdPartySchemas</code> and further subdivided in folders according to the
      owner/maintainer of the schema.</para>
      <warning>
      <para>Schema copies in this sub-folder are provided solely for implementers convenience and are NOT a part of the OASIS multipart product.
        These schemas belong to their respective owners and their use is governed by their owners' respective IPR policies.
        The support schemas are organized in folders per owner/maintainer.
        It is the implementer's sole responsibility to ensure that their local copies of all schemas are the appropriate up to date versions.</para></warning>

        <para>Currently the only included third party support schema is
          <ulink url="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</ulink> [<ulink url="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</ulink>] at <ulink
            url="&this-loc;/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd"
            >&this-loc;/schemas/informativeCopiesOf3rdPartySchemas/w3c/xml.xsd</ulink> in this distribution.</para>
    </section> -->
  </appendix>
  <appendix role="normative | informative" id="SecurityPrivacy">
    <title>Security and privacy considerations</title>
    <note>
      <para>OASIS strongly recommends that Technical Committees consider issues that might affect
        safety, security, privacy, and/or data protection in implementations of their work products
        and document these for implementers and adopters. For some purposes, you may find it
        required, e.g. if you apply for IANA registration.</para>
      <para>While it may not be immediately obvious how your work product might make systems
        vulnerable to attack, most work products, because they involve communications between
        systems, message formats, or system settings, open potential channels for exploit. For
        example, IETF [<link linkend="rfc3552">RFC 3552</link>] lists ‚Äúeavesdropping, replay,
        message insertion, deletion, modification, and man-in-the-middle‚Äù as well as potential
        denial of service attacks as threats that must be considered and, if appropriate, addressed
        in IETF RFCs.</para>
      <para>In addition to considering and describing foreseeable risks, this section should include
        guidance on how implementers and adopters can protect against these risks.</para>
      <para>We encourage editors and TC members concerned with this subject to read Guidelines for
        Writing RFC Text on Security Considerations, IETF [<link linkend="rfc3552">RFC 3552</link>],
        for more information.</para>
    </note>
  </appendix>
  <appendix role="informative" id="specChangeTracking">
    <title>Specification Change Tracking</title>
    <para>This appendix will contain tracked changes after the csprd01 phase will have been
      reached.</para>
    <!-- 
    <xi:include href="ReviewChangeTracking/ReviewChangeTrack.xml"
      xmlns:xi="http://www.w3.org/2001/XInclude"/>
       -->
  </appendix>
  <appendix role="informative" id="acknowledgements">
    <title>Acknowledgements</title>
    <para>The following individuals have participated in the creation of this specification and are
      gratefully acknowledged:</para>
    <itemizedlist spacing="compact">
      <listitem>
        <para>Erjavec, Toma≈æ - JSI </para>
      </listitem>
      <listitem>
        <para>Filip, David - TCD, ADAPT Centre </para>
      </listitem>
      <listitem>
        <para>Jakub√≠ƒçek, Milo≈° - Lexical Computing </para>
      </listitem>
      <listitem>
        <para>Kernerman, Ilan - K Dictionaries </para>
      </listitem>
      <listitem>
        <para>Kosem, Iztok - JSI </para>
      </listitem>
      <listitem>
        <para>Krek, Simon - JSI </para>
      </listitem>
      <listitem>
        <para>McCrae, John - National University of Ireland Galway </para>
      </listitem>
      <listitem>
        <para>Mƒõchura, Milan - JSI </para>
      </listitem>
    </itemizedlist>
  </appendix>
</article>